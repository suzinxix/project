Index: app/src/main/java/com/example/studyproject/WeeklyFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.studyproject;\r\n\r\nimport android.Manifest;\r\nimport android.app.AlertDialog;\r\nimport android.app.ProgressDialog;\r\nimport android.content.ContentResolver;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\n\r\nimport android.os.Environment;\r\nimport android.provider.MediaStore;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.webkit.MimeTypeMap;\r\nimport android.widget.ImageButton;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.core.content.FileProvider;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.firebase.ui.database.FirebaseRecyclerAdapter;\r\nimport com.firebase.ui.database.FirebaseRecyclerOptions;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.firebase.storage.UploadTask;\r\nimport com.gun0912.tedpermission.PermissionListener;\r\nimport com.gun0912.tedpermission.TedPermission;\r\n\r\n\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\n\r\nimport static android.app.Activity.RESULT_OK;\r\n\r\npublic class WeeklyFragment extends Fragment {\r\n    private RecyclerView myWeeklyList;\r\n    private StorageReference mStorageRef;\r\n    private DatabaseReference WeeklyRef, WeekRef, mDatabaseRef;\r\n    private Uri photoUri;\r\n    private String mCurrentPhotoPath;\r\n    private static final int FROM_CAMERA = 0;\r\n    private static final int FROM_ALBUM = 1;\r\n    private int flag = 0;\r\n\r\n    public WeeklyFragment() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n\r\n        View weeklyView = (View) inflater.inflate(R.layout.fragment_weekly, container, false);\r\n\r\n        myWeeklyList = (RecyclerView) weeklyView.findViewById(R.id.recyclerviewWeekly);\r\n        myWeeklyList.setLayoutManager(new LinearLayoutManager(getContext()));\r\n\r\n        WeeklyRef = FirebaseDatabase.getInstance().getReference().child(\"weekly\");\r\n        WeekRef = FirebaseDatabase.getInstance().getReference().child(\"weekly\");\r\n        mStorageRef = FirebaseStorage.getInstance().getReference().child(\"gallery\");\r\n        mDatabaseRef = FirebaseDatabase.getInstance().getReference().child(\"gallery_url\");\r\n\r\n        PermissionListener permissionlistener = new PermissionListener() {\r\n            @Override\r\n            public void onPermissionGranted() {\r\n                Toast.makeText(getActivity(), \"권한 허가\", Toast.LENGTH_SHORT).show();\r\n            }\r\n\r\n            @Override\r\n            public void onPermissionDenied(ArrayList<String> deniedPermissions) {\r\n                Toast.makeText(getActivity(), \"권한 거부\\n\" + deniedPermissions.toString(), Toast.LENGTH_SHORT).show();\r\n            }\r\n\r\n\r\n        };\r\n\r\n        TedPermission.with(getContext())\r\n                .setPermissionListener(permissionlistener)\r\n                .setDeniedMessage(\"If you reject permission,you can not use this service\\n\\nPlease turn on permissions at [Setting] > [Permission] \")\r\n                .setPermissions(Manifest.permission.WRITE_EXTERNAL_STORAGE, Manifest.permission.CAMERA)\r\n                .check();\r\n\r\n        return weeklyView;\r\n    }\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n\r\n        FirebaseRecyclerOptions<WeeklyDB> options = new FirebaseRecyclerOptions.Builder<WeeklyDB>()\r\n                .setQuery(WeeklyRef, WeeklyDB.class).build();\r\n\r\n        FirebaseRecyclerAdapter<WeeklyDB, WeeklyViewHolder> adapter\r\n                = new FirebaseRecyclerAdapter<WeeklyDB, WeeklyViewHolder>(options) {\r\n            @Override\r\n            protected void onBindViewHolder(@NonNull WeeklyViewHolder holder, int position, @NonNull WeeklyDB model) {\r\n                String week = getRef(position).getKey();\r\n\r\n                WeekRef.child(week).addValueEventListener(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        if (snapshot.hasChild(\"weekly\")) {\r\n                            String week_num = snapshot.child(\"week\").getValue().toString();\r\n                            String week_todo = snapshot.child(\"todo\").getValue().toString();\r\n\r\n                            holder.tv_week.setText(week_num);\r\n                            holder.tv_todo.setText(week_todo);\r\n                        } else {\r\n                            String week_num = snapshot.child(\"week\").getValue().toString();\r\n                            String week_todo = snapshot.child(\"todo\").getValue().toString();\r\n\r\n                            holder.tv_week.setText(week_num);\r\n                            holder.tv_todo.setText(week_todo);\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n\r\n            }\r\n\r\n            @NonNull\r\n            @Override\r\n            public WeeklyViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n                View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.weekly_layout, parent, false);\r\n                return new WeeklyViewHolder(view);\r\n            }\r\n        };\r\n\r\n        myWeeklyList.setAdapter(adapter);\r\n        adapter.startListening();\r\n    }\r\n\r\n    public class WeeklyViewHolder extends RecyclerView.ViewHolder {\r\n        TextView tv_week, tv_todo;\r\n        ImageButton ibt_camera, ibt_timer;\r\n        TimerFragment fragment_timer;\r\n\r\n        public WeeklyViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n\r\n            tv_week = (TextView) itemView.findViewById(R.id.textViewWeek);\r\n            tv_todo = (TextView) itemView.findViewById(R.id.textViewTodo);\r\n            fragment_timer = new TimerFragment();\r\n\r\n            ibt_camera = (ImageButton)itemView.findViewById(R.id.imageButtonCamera);\r\n            ibt_camera.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View v) {\r\n                    DialogInterface.OnClickListener cameraListener = new DialogInterface.OnClickListener() {\r\n                        @Override\r\n                        public void onClick(DialogInterface dialog, int which) {\r\n                            flag = 0;\r\n                            takePhoto();\r\n                            uploadPhoto();\r\n                        }\r\n                    };\r\n\r\n                    DialogInterface.OnClickListener albumListener = new DialogInterface.OnClickListener() {\r\n                        @Override\r\n                        public void onClick(DialogInterface dialog, int which) {\r\n                            flag = 1;\r\n                            selectAlbum();\r\n                            //uploadPhoto();\r\n                        }\r\n                    };\r\n\r\n                    DialogInterface.OnClickListener cancelListener = new DialogInterface.OnClickListener() {\r\n                        @Override\r\n                        public void onClick(DialogInterface dialog, int which) {\r\n                            dialog.dismiss();\r\n                        }\r\n                    };\r\n\r\n                    new AlertDialog.Builder(getContext())\r\n                            .setTitle(\"업로드할 이미지 선택\")\r\n                            .setPositiveButton(\"사진촬영\", cameraListener)\r\n                            .setNeutralButton(\"앨범선택\", albumListener)\r\n                            .setNegativeButton(\"취소\", cancelListener)\r\n                            .show();\r\n                }\r\n            });\r\n\r\n            ibt_timer = (ImageButton)itemView.findViewById(R.id.imageButtonTimer);\r\n            ibt_timer.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View v) {\r\n                    getActivity().getSupportFragmentManager().beginTransaction().replace(R.id.containerTabs, fragment_timer).commit();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    public void takePhoto() {\r\n        // 카메라 인텐트 실행\r\n        String state = Environment.getExternalStorageState();\r\n        if(Environment.MEDIA_MOUNTED.equals(state)) {\r\n            Intent takePhotoIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\r\n            if(takePhotoIntent.resolveActivity(getActivity().getApplicationContext().getPackageManager())!=null){\r\n                File photoFile = null;\r\n                try{\r\n                    photoFile = createImageFile();\r\n                } catch (IOException e){\r\n                    e.printStackTrace();\r\n                }\r\n                if(photoFile!=null){\r\n                    Uri photoURI = FileProvider.getUriForFile(getActivity().getApplicationContext(), \"com.example.studyproject.fileprovider\", photoFile);\r\n                    takePhotoIntent.putExtra(android.provider.MediaStore.EXTRA_OUTPUT, photoURI);\r\n                    startActivityForResult(takePhotoIntent, FROM_CAMERA);\r\n                }\r\n            }\r\n        } else {\r\n            Log.v(\"알림\", \"저장공간에 접근 불가능\");\r\n            return;\r\n        }\r\n    }\r\n\r\n    //사용자 휴대폰 갤러리에 저장\r\n    public File createImageFile() throws IOException{\r\n        String imgFileName = System.currentTimeMillis() + \".jpg\";\r\n        File imageFile= null;\r\n        File storageDir = new File(Environment.getExternalStorageDirectory() + \"/DCIM\", \"honeystudy\"); //chilㅇ\r\n\r\n        if(!storageDir.exists()){\r\n            //없으면 만들기\r\n            Log.v(\"알림\",\"storageDir 존재 x \" + storageDir.toString());\r\n            storageDir.mkdirs();\r\n        }\r\n        Log.v(\"알림\",\"storageDir 존재함 \" + storageDir.toString());\r\n        imageFile = new File(storageDir,imgFileName);\r\n        mCurrentPhotoPath = imageFile.getAbsolutePath();\r\n        return imageFile;\r\n    }\r\n\r\n    public void addPhotoToGallery(){\r\n        Intent mediaScanIntent = new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE);\r\n        File f = new File(mCurrentPhotoPath);\r\n        Uri contentUri = Uri.fromFile(f);\r\n        mediaScanIntent.setData(contentUri);\r\n        getActivity().sendBroadcast(mediaScanIntent);\r\n        Toast.makeText(getActivity(),\"사진이 저장되었습니다\",Toast.LENGTH_SHORT).show();\r\n    }\r\n\r\n    public void selectAlbum(){\r\n        //앨범에서 이미지 가져옴\r\n        //앨범 열기\r\n        Intent intent = new Intent(Intent.ACTION_PICK);\r\n        intent.setType(MediaStore.Images.Media.CONTENT_TYPE);\r\n        intent.setType(\"image/*\");\r\n        startActivityForResult(intent, FROM_ALBUM);\r\n    }\r\n\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (resultCode != RESULT_OK) {\r\n            return;\r\n        }\r\n        switch (requestCode) {\r\n            case FROM_ALBUM: {\r\n                //앨범에서 가져오기\r\n                if (data.getData() != null) {\r\n                    try {\r\n                        photoUri = data.getData();\r\n                    } catch (Exception e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                    uploadPhoto();\r\n                }\r\n                break;\r\n            }\r\n\r\n            case FROM_CAMERA: {\r\n                //카메라 촬영\r\n                try {\r\n                    addPhotoToGallery();\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    private String getFileExtension(Uri uri) {\r\n        ContentResolver cR = getActivity().getContentResolver();\r\n        MimeTypeMap mime = MimeTypeMap.getSingleton();\r\n        return mime.getExtensionFromMimeType(cR.getType(uri));\r\n    }\r\n\r\n    public void uploadPhoto() {\r\n        AlertDialog.Builder alt_bld = new AlertDialog.Builder(getContext()); //R.style.추가\r\n        alt_bld.setTitle(\"사진 선택 완료\").setMessage(\"사진을 등록하시겠습니까?\").setCancelable(\r\n                false).setPositiveButton(\"네\",\r\n                new DialogInterface.OnClickListener() {\r\n                    public void onClick(DialogInterface dialog, int id) {\r\n//                        //DB에 등록하기\r\n//                        storage = FirebaseStorage.getInstance(\"gs://fir-test-1-35648.appspot.com\");\r\n//                        StorageReference storageRef = storage.getReference();\r\n//                        final String cu = mAuth.getUid();\r\n                        //1. 사진을 storage에 저장하고 그 url을 알아내야 함\r\n                        //if (photoUri != null) {\r\n                        StorageReference fileReference = mStorageRef.child(System.currentTimeMillis()\r\n                                + \".\" + getFileExtension(photoUri));\r\n\r\n\r\n                        // String filename = \"\" + System.currentTimeMillis(); //cu + \"_\" +\r\n\r\n                        UploadTask uploadTask;\r\n                        Uri file = null;\r\n                        if(flag ==0){\r\n                            //사진촬영\r\n                            file = Uri.fromFile(new File(mCurrentPhotoPath));\r\n                        } else if(flag==1){\r\n                            //앨범선택\r\n                            file = photoUri;\r\n                        }\r\n                        uploadTask = fileReference.putFile(file);\r\n                        Log.v(\"photoUri\", photoUri.toString());\r\n\r\n\r\n                        //uploadTask = galleryRdf.putFile(file);\r\n                        final ProgressDialog progressDialog = new ProgressDialog(getContext());\r\n                        progressDialog.setMessage(\"업로드중\");\r\n                        progressDialog.show();\r\n\r\n                        // Register observers to listen for when the download is done or if it fails\r\n                        uploadTask.addOnFailureListener(new OnFailureListener() {\r\n                            @Override\r\n                            public void onFailure(@NonNull Exception exception) {\r\n                                // Handle unsuccessful uploads\r\n                                Log.v(\"알림\", \"사진 업로드 실패\");\r\n                                progressDialog.dismiss();\r\n                                exception.printStackTrace();\r\n\r\n                            }\r\n                        }).addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {\r\n                            @Override\r\n                            public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {\r\n                                fileReference.getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {\r\n                                    @Override\r\n                                    public void onSuccess(Uri uri) {\r\n                                        String downloadUrl = uri.toString();\r\n\r\n                                        SimpleDateFormat format1 = new SimpleDateFormat( \"yyyyMMdd HH:mm:ss\");\r\n                                        Calendar time = Calendar.getInstance();\r\n                                        time.add(Calendar.HOUR, 9);\r\n                                        String format_time1 = format1.format(time.getTime());\r\n\r\n                                        GalleryDB url = new GalleryDB(format_time1, downloadUrl);\r\n                                        String uploadId = mDatabaseRef.push().getKey();\r\n                                        mDatabaseRef.child(uploadId).setValue(url);\r\n                                        Log.v(\"알림\", \"사진 업로드 성공 \" + downloadUrl);\r\n                                        progressDialog.dismiss();\r\n                                        Toast.makeText(getActivity(), \"사진이 업로드 되었습니다.\", Toast.LENGTH_SHORT).show();\r\n                                    }\r\n                                });\r\n                            }\r\n                        });\r\n                    }\r\n                }).setNegativeButton(\"아니오\",\r\n                new DialogInterface.OnClickListener() {\r\n                    public void onClick(DialogInterface dialog, int id) {\r\n                        // 아니오 클릭. dialog 닫기.\r\n                        dialog.cancel();\r\n                    }\r\n                });\r\n        AlertDialog alert = alt_bld.create();\r\n        alert.show();\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/studyproject/WeeklyFragment.java	(revision a2b654a7765631a7bd28666ecfc46a811fb7131a)
+++ app/src/main/java/com/example/studyproject/WeeklyFragment.java	(date 1622727954832)
@@ -88,8 +88,6 @@
             public void onPermissionDenied(ArrayList<String> deniedPermissions) {
                 Toast.makeText(getActivity(), "권한 거부\n" + deniedPermissions.toString(), Toast.LENGTH_SHORT).show();
             }
-
-
         };
 
         TedPermission.with(getContext())
@@ -219,6 +217,7 @@
             Intent takePhotoIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
             if(takePhotoIntent.resolveActivity(getActivity().getApplicationContext().getPackageManager())!=null){
                 File photoFile = null;
+                Log.v("알림", "3");
                 try{
                     photoFile = createImageFile();
                 } catch (IOException e){
@@ -232,7 +231,6 @@
             }
         } else {
             Log.v("알림", "저장공간에 접근 불가능");
-            return;
         }
     }
 
@@ -240,7 +238,7 @@
     public File createImageFile() throws IOException{
         String imgFileName = System.currentTimeMillis() + ".jpg";
         File imageFile= null;
-        File storageDir = new File(Environment.getExternalStorageDirectory() + "/DCIM", "honeystudy"); //chilㅇ
+        File storageDir = new File(Environment.getExternalStorageDirectory() + "/DCIM", "honeystudy");
 
         if(!storageDir.exists()){
             //없으면 만들기
@@ -315,18 +313,11 @@
                 false).setPositiveButton("네",
                 new DialogInterface.OnClickListener() {
                     public void onClick(DialogInterface dialog, int id) {
-//                        //DB에 등록하기
-//                        storage = FirebaseStorage.getInstance("gs://fir-test-1-35648.appspot.com");
-//                        StorageReference storageRef = storage.getReference();
 //                        final String cu = mAuth.getUid();
                         //1. 사진을 storage에 저장하고 그 url을 알아내야 함
-                        //if (photoUri != null) {
                         StorageReference fileReference = mStorageRef.child(System.currentTimeMillis()
                                 + "." + getFileExtension(photoUri));
-
-
                         // String filename = "" + System.currentTimeMillis(); //cu + "_" +
-
                         UploadTask uploadTask;
                         Uri file = null;
                         if(flag ==0){
@@ -337,15 +328,11 @@
                             file = photoUri;
                         }
                         uploadTask = fileReference.putFile(file);
-                        Log.v("photoUri", photoUri.toString());
 
-
-                        //uploadTask = galleryRdf.putFile(file);
                         final ProgressDialog progressDialog = new ProgressDialog(getContext());
                         progressDialog.setMessage("업로드중");
                         progressDialog.show();
 
-                        // Register observers to listen for when the download is done or if it fails
                         uploadTask.addOnFailureListener(new OnFailureListener() {
                             @Override
                             public void onFailure(@NonNull Exception exception) {
@@ -365,7 +352,6 @@
 
                                         SimpleDateFormat format1 = new SimpleDateFormat( "yyyyMMdd HH:mm:ss");
                                         Calendar time = Calendar.getInstance();
-                                        time.add(Calendar.HOUR, 9);
                                         String format_time1 = format1.format(time.getTime());
 
                                         GalleryDB url = new GalleryDB(format_time1, downloadUrl);
Index: app/src/main/java/com/example/studyproject/GalleryDB.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.studyproject;\r\n\r\nimport com.google.firebase.database.Exclude;\r\n\r\npublic class GalleryDB {\r\n    public String mphotoText;\r\n    private String mImageUrl;\r\n    private String mKey;\r\n\r\n    public GalleryDB () {\r\n\r\n    }\r\n\r\n    public GalleryDB (String photoText, String imageUrl) {\r\n        if (photoText.trim().equals(\"\")) {\r\n            photoText = \"No Name\";\r\n        } //\r\n\r\n        mphotoText = photoText;\r\n        mImageUrl = imageUrl;\r\n    }\r\n\r\n    public String getPhotoText() { return mphotoText; }\r\n    public void setPhotoText(String photoText) { mphotoText = photoText; }\r\n\r\n    public String getImageUrl() {\r\n        return mImageUrl;\r\n    }\r\n    public void setImageUrl(String imageUrl) {\r\n        mImageUrl = imageUrl;\r\n    }\r\n\r\n    @Exclude\r\n    public String getKey() { return mKey; }\r\n    @Exclude\r\n    public void setKey(String key) {\r\n        mKey = key;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/studyproject/GalleryDB.java	(revision a2b654a7765631a7bd28666ecfc46a811fb7131a)
+++ app/src/main/java/com/example/studyproject/GalleryDB.java	(date 1622727624739)
@@ -3,7 +3,7 @@
 import com.google.firebase.database.Exclude;
 
 public class GalleryDB {
-    public String mphotoText;
+    public String photoText;
     private String mImageUrl;
     private String mKey;
 
@@ -16,12 +16,12 @@
             photoText = "No Name";
         } //
 
-        mphotoText = photoText;
+        this.photoText = photoText;
         mImageUrl = imageUrl;
     }
 
-    public String getPhotoText() { return mphotoText; }
-    public void setPhotoText(String photoText) { mphotoText = photoText; }
+    public String getPhotoText() { return photoText; }
+    public void setPhotoText(String photoText) { this.photoText = photoText; }
 
     public String getImageUrl() {
         return mImageUrl;
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.example.studyproject\">\r\n\r\n    <uses-permission android:name=\"android.permission.WAKE_LOCK\" />\r\n    <!-- <uses-feature android:name=\"android.hardware.type.watch\" /> -->\r\n    <uses-permission android:name=\"android.permission.INTERNET\" /> <!-- 카메라, 내부 저장소 접근 권한 설정 -->\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.CAMERA\" />\r\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\r\n\r\n    <uses-feature\r\n        android:name=\"android.hardware.camera\"\r\n        android:required=\"true\" />\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme\"\r\n        android:usesCleartextTraffic=\"true\">\r\n        <!--\r\n        <uses-library\r\n            android:name=\"com.google.android.wearable\"\r\n            android:required=\"true\" />-->\r\n\r\n        <!--\r\n               Set to true if your app is Standalone, that is, it does not require the handheld\r\n               app to run.\r\n        -->\r\n        <meta-data\r\n            android:name=\"com.google.android.wearable.standalone\"\r\n            android:value=\"true\" />\r\n\r\n\r\n        <activity android:name=\".MainActivity\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity android:name=\".RegisterActivity\" />\r\n        <activity\r\n            android:name=\".HomeActivity\"\r\n            android:windowSoftInputMode=\"adjustPan\" />\r\n        <activity android:name=\".LoginActivity\" />\r\n        <activity android:name=\".SettingActivity\" />\r\n        <activity android:name=\".SearchDetail\" />\r\n        <activity android:name=\".FindPwActivity\" />\r\n        <activity android:name=\".image\"/>\r\n\r\n        <provider\r\n            android:name=\"androidx.core.content.FileProvider\"\r\n            android:authorities=\"com.example.studyproject.fileprovider\"\r\n            android:exported=\"false\"\r\n            android:grantUriPermissions=\"true\">\r\n            <meta-data\r\n                android:name=\"android.support.FILE_PROVIDER_PATHS\"\r\n                android:resource=\"@xml/file_paths\" />\r\n        </provider>\r\n\r\n        <activity android:name=\".MakeRoom\" />\r\n\r\n        <service android:name=\".FirebasePushNotificationClass\"\r\n            android:enabled=\"true\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.RESPOND_VIA_MESSAGE\"></action>\r\n            </intent-filter>\r\n        </service>\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision a2b654a7765631a7bd28666ecfc46a811fb7131a)
+++ app/src/main/AndroidManifest.xml	(date 1622725652219)
@@ -73,4 +73,12 @@
         </service>
     </application>
 
+    <queries>
+        <intent>
+            <action android:name="android.intent.action.VIEW" />
+            <category android:name="android.intent.category.BROWSABLE" />
+            <data android:scheme="https" />
+        </intent>
+    </queries>
+
 </manifest>
\ No newline at end of file
Index: app/src/main/java/com/example/studyproject/GalleryFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.studyproject;\r\n\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.GridLayoutManager;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.firebase.ui.database.FirebaseRecyclerAdapter;\r\nimport com.firebase.ui.database.FirebaseRecyclerOptions;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\n\r\nimport org.jetbrains.annotations.NotNull;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class GalleryFragment extends Fragment {\r\n    private RecyclerView GalleryPhotoList;\r\n    private GalleryAdapter galleryAdapter;\r\n\r\n    private DatabaseReference mDatabaseRef;\r\n    private List<GalleryDB> mUploads;\r\n\r\n    public GalleryFragment() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\r\n        View galleryView = (View) inflater.inflate(R.layout.fragment_gallery, container, false);\r\n\r\n        GalleryPhotoList = (RecyclerView) galleryView.findViewById(R.id.recyclerviewGallery);\r\n        GalleryPhotoList.setHasFixedSize(true);\r\n        GalleryPhotoList.setLayoutManager(new GridLayoutManager(getContext(), 3));\r\n\r\n        mUploads = new ArrayList<>();\r\n        galleryAdapter = new GalleryAdapter(getContext(), mUploads);\r\n        GalleryPhotoList.setAdapter(galleryAdapter);\r\n\r\n\r\n        mDatabaseRef = FirebaseDatabase.getInstance().getReference(\"gallery_url\");\r\n\r\n        mDatabaseRef.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NotNull DataSnapshot dataSnapshot) {\r\n                mUploads.clear();\r\n                for (DataSnapshot postSnapshot : dataSnapshot.getChildren()) {\r\n                    GalleryDB galleryDB = postSnapshot.getValue(GalleryDB.class);\r\n                    galleryDB.setKey(postSnapshot.getKey());\r\n                    mUploads.add(galleryDB);\r\n                }\r\n\r\n                galleryAdapter.notifyDataSetChanged();\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n                //Toast.makeText(getActivity(), databaseError.getMessage(), Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n\r\n        return galleryView;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/studyproject/GalleryFragment.java	(revision a2b654a7765631a7bd28666ecfc46a811fb7131a)
+++ app/src/main/java/com/example/studyproject/GalleryFragment.java	(date 1622724385144)
@@ -1,31 +1,20 @@
 package com.example.studyproject;
 
 import android.os.Bundle;
-import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
-import android.widget.ImageView;
-import android.widget.ProgressBar;
-import android.widget.TextView;
-import android.widget.Toast;
 
 import androidx.annotation.NonNull;
 import androidx.fragment.app.Fragment;
 import androidx.recyclerview.widget.GridLayoutManager;
-import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
-import com.bumptech.glide.Glide;
-import com.firebase.ui.database.FirebaseRecyclerAdapter;
-import com.firebase.ui.database.FirebaseRecyclerOptions;
 import com.google.firebase.database.DataSnapshot;
 import com.google.firebase.database.DatabaseError;
 import com.google.firebase.database.DatabaseReference;
 import com.google.firebase.database.FirebaseDatabase;
 import com.google.firebase.database.ValueEventListener;
-import com.google.firebase.storage.FirebaseStorage;
-import com.google.firebase.storage.StorageReference;
 
 import org.jetbrains.annotations.NotNull;
 
@@ -73,7 +62,6 @@
 
             @Override
             public void onCancelled(@NonNull DatabaseError error) {
-                //Toast.makeText(getActivity(), databaseError.getMessage(), Toast.LENGTH_SHORT).show();
             }
         });
 
Index: app/src/main/java/com/example/studyproject/SearchDetail.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.studyproject;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.MenuInflater;\r\nimport android.view.View;\r\nimport android.view.WindowManager;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.PopupMenu;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.fragment.app.FragmentTransaction;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport androidx.room.Room;\r\nimport androidx.viewpager.widget.ViewPager;\r\n\r\nimport com.firebase.ui.database.FirebaseRecyclerOptions;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.material.tabs.TabLayout;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Dictionary;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\n\r\npublic class SearchDetail extends AppCompatActivity {\r\n    //private ArrayList<UserStudyRoomDB> dataholder;\r\n    //private MyRoomFragmentAdapter myadapter;\r\n    //RecyclerView recyclerView;\r\n    //private RecyclerView.LayoutManager layoutManager;\r\n    //ArrayList<UserStudyRoomDB> dataholder;\r\n\r\n    MakeRoomDB model;\r\n    TextView Roomname, Roominfo, Roomperson;\r\n    ImageView Roompic;\r\n    Button bt;\r\n    public SearchDetail(){\r\n    }\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.search_detail);\r\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);\r\n        Roomname=findViewById(R.id.study_title);\r\n        Roominfo=findViewById(R.id.study_info);\r\n        Roomperson=findViewById(R.id.study_member);\r\n        Roompic=findViewById(R.id.study_picture);\r\n\r\n        String name = getIntent().getStringExtra(\"Roomname\");\r\n        String info = getIntent().getStringExtra(\"Roominfo\");\r\n        String person = getIntent().getStringExtra(\"Roomperson\");\r\n\r\n        Roomname.setText(name);\r\n        Roominfo.setText(info);\r\n        Roomperson.setText(person);\r\n        Roompic.setImageResource(R.drawable.book);\r\n\r\n        //roomcate=findViewById(R.id.)\r\n\r\n        /* 카테고리 별 이미지 입히고 싶은데 실패함\r\n        if(model.roomcategory==\"공부\")\r\n            Roompic.setImageResource(R.drawable.book);\r\n        else if(model.roomcategory==\"습관\")\r\n            Roompic.setImageResource(R.drawable.habbit);\r\n        else if(model.roomcategory==\"운동\")\r\n            Roompic.setImageResource(R.drawable.exercise);\r\n        else if(model.roomcategory==\"취미\")\r\n            Roompic.setImageResource(R.drawable.hobby);\r\n        else if(model.roomcategory==\"기타\")\r\n            Roompic.setImageResource(R.drawable.study);\r\n         */\r\n\r\n        mDatabase = FirebaseDatabase.getInstance().getReference();\r\n        bt = findViewById(R.id.bt_apply);\r\n        bt.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                // 스터디룸 데이터 넘기기\r\n                AlertDialog.Builder dlg = new AlertDialog.Builder(SearchDetail.this);\r\n                dlg.setTitle(\"Message\") //제목\r\n                        .setMessage(\"선택하신 스터디룸에 가입하시겠습니까?\")\r\n                        .setPositiveButton(\"네\", new DialogInterface.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(DialogInterface dialog, int which) {\r\n                                // 파이어베이스에 가입한 사용자 이름을 추가\r\n                                FirebaseDatabase  database = FirebaseDatabase.getInstance();\r\n                                DatabaseReference mDatabaseRef = database.getReference(\"study_rooms/\" +name +\"/\");\r\n                                DatabaseReference userRef = database.getReference();\r\n\r\n                                FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser(); // 로그인한 유저 정보 가져오기\r\n                                String uid = user != null ? user.getUid() : null; // 로그인한 유저의 고유 uid 가져오기\r\n\r\n                                DatabaseReference username = userRef.child(uid).child(\"userName\");\r\n\r\n                                mDatabaseRef.child(\"member\").push().setValue(\"예시\"); // 사용자 이름 데이터 추가\r\n                                //databaseReference.child(\"message\").push().setValue(chatData);\r\n                                //최종이길..\r\n                                //자바 코드에서 프래그먼트 추가하는 방법\r\n                                //MyRoomFragment mf = (MyRoomFragment) getSupportFragmentManager().findFragmentById(R.id.frag_myroom);\r\n                                //mf.recyclerView = findViewById(R.id.myroom);\r\n                                //dataholder = new ArrayList<>();\r\n                                //mf.recyclerView.setLayoutManager(new LinearLayoutManager(mf.getContext()));\r\n\r\n                                //mf.recyclerView.setAdapter(new MyRoomFragmentAdapter(dataholder));\r\n                                //dataholder.add(new UserStudyRoomDB(\"쫌 돼라!!\", 0, 0));\r\n                                //mf.recyclerView.setAdapter(new MyRoomFragmentAdapter(dataholder));\r\n\r\n                                //new MyRoomFragmentAdapter(dataholder).notifyDataSetChanged();\r\n                                //((MyRoomFragment) getSupportFragmentManager().findFragmentByTag(\"fragmentTag\")).testFunction();\r\n                                //dataholder.add(new UserStudyRoomDB(\"쫌 돼라!!\", 0, 0));\r\n                                //recyclerView.setAdapter(new MyRoomFragmentAdapter(dataholder));\r\n                                //recyclerView = findViewById(R.id.myroom);\r\n                                //myadapter = new MyRoomFragmentAdapter(dataholder);\r\n                                //MyRoomFragment myRoomFragment = new MyRoomFragment();\r\n                                //Bundle bundle = new Bundle(1); // 전달하려는 값의 갯수\r\n                                //bundle.putString(\"roomname\", name);\r\n                                //myRoomFragment.setArguments(bundle);\r\n                                //getSupportFragmentManager().beginTransaction().replace(R.id.frag_myroom, new MyRoomFragment()).commit();\r\n                                //myadapter.notifyDataSetChanged();\r\n                            }\r\n                        })\r\n                        .setNegativeButton(\"아니요\", new DialogInterface.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(DialogInterface dialog, int which) {\r\n\r\n                            }\r\n                        });\r\n                AlertDialog alertDialog = dlg.create();\r\n                dlg.show();\r\n\r\n                //ApplyDialog applyDialog = new ApplyDialog();\r\n                //applyDialog.show(getSupportFragmentManager(), \"example dialog\");\r\n            }\r\n        });\r\n    }\r\n    /*\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.fragment_search_detail, container, false);\r\n\r\n        TextView study_title = view.findViewById(R.id.study_title);\r\n        TextView study_info = view.findViewById(R.id.study_info);\r\n\r\n        study_title.setText(Roomname);\r\n        study_info.setText(Roominfo);\r\n\r\n        return view;\r\n    }\r\n*/\r\n/*\r\n    public void onBackPressed(){\r\n        AppCompatActivity activity = (AppCompatActivity)getContext();\r\n        activity.getSupportFragmentManager().beginTransaction().replace(R.id.wrapper, new SearchAllFragment());\r\n    }*/\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/studyproject/SearchDetail.java	(revision a2b654a7765631a7bd28666ecfc46a811fb7131a)
+++ app/src/main/java/com/example/studyproject/SearchDetail.java	(date 1622724314182)
@@ -91,7 +91,7 @@
             Roompic.setImageResource(R.drawable.study);
          */
 
-        mDatabase = FirebaseDatabase.getInstance().getReference();
+        DatabaseReference mDatabase = FirebaseDatabase.getInstance().getReference();
         bt = findViewById(R.id.bt_apply);
         bt.setOnClickListener(new View.OnClickListener() {
             @Override
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\napply plugin: 'com.google.gms.google-services'\r\n\r\nandroid {\r\n    compileSdkVersion 30\r\n    buildToolsVersion \"30.0.2\"\r\n\r\n    buildFeatures{\r\n        viewBinding true\r\n    }\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.studyproject\"\r\n        minSdkVersion 26\r\n        targetSdkVersion 30\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n\r\n    }\r\n}\r\n\r\ndependencies {\r\n    //photoview\r\n    implementation 'com.github.chrisbanes:PhotoView:2.3.0'\r\n\r\n    implementation fileTree(dir: \"libs\", include: [\"*.jar\"])\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\r\n    implementation 'com.android.volley:volley:1.1.1'\r\n    implementation 'com.google.android.material:material:1.2.1'\r\n    //toolbar\r\n    implementation 'androidx.appcompat:appcompat:1.0.0'\r\n    //tablayout\r\n    implementation 'com.google.android.material:material:1.2.1'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    implementation 'com.google.firebase:firebase-storage:20.0.0'\r\n    implementation 'androidx.wear:wear:1.0.0'\r\n    implementation 'com.google.firebase:firebase-messaging:21.0.1'\r\n    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'\r\n    testImplementation 'junit:junit:4.12'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n\r\n    //cardview\r\n    implementation \"androidx.cardview:cardview:1.0.0\"\r\n    compileOnly 'com.google.android.wearable:wearable:2.6.0'\r\n\r\n    //room\r\n    def room_version = \"2.2.6\"\r\n    implementation \"androidx.room:room-runtime:$room_version\"\r\n    annotationProcessor \"androidx.room:room-compiler:$room_version\"\r\n    // optional - RxJava support for Room\r\n    implementation \"androidx.room:room-rxjava2:$room_version\"\r\n    // optional - Guava support for Room, including Optional and ListenableFuture\r\n    implementation \"androidx.room:room-guava:$room_version\"\r\n    // optional - Test helpers\r\n    testImplementation \"androidx.room:room-testing:$room_version\"\r\n\r\n    //firebase\r\n    implementation platform('com.google.firebase:firebase-bom:26.8.0')\r\n    implementation 'com.google.firebase:firebase-analytics'\r\n    implementation 'com.google.firebase:firebase-auth:16.0.5'\r\n    implementation 'com.google.android.gms:play-services-auth:17.0.0'\r\n    implementation 'com.google.firebase:firebase-database:17.0.0'\r\n    implementation 'com.google.firebase:firebase-database:19.7.0' //추가\r\n    implementation 'com.google.firebase:firebase-database:20.0.0'\r\n    implementation 'com.google.firebase:firebase-core:10.2.1'\r\n    implementation 'com.google.firebase:firebase-database:19.6.0'\r\n    implementation 'com.firebaseui:firebase-ui-database:7.1.1'\r\n\r\n    //firebase storage\r\n    implementation 'com.google.firebase:firebase-storage:19.2.2'\r\n\r\n    //firebase cloud messaging\r\n    implementation 'com.google.firebase:firebase-messaging:17.3.4'\r\n\r\n    // CircleImageView\r\n    implementation 'de.hdodenhof:circleimageview:3.1.0'\r\n\r\n    //TedPermission\r\n    implementation 'gun0912.ted:tedpermission:2.0.0'\r\n\r\n    //glide 이미지 로딩\r\n    implementation 'com.github.bumptech.glide:glide:4.9.0'\r\n    //+ 이미지로딩\r\n//    compile 'com.google.firebase:firebase-storage:12.0.0'\r\n//    compile 'com.firebaseui:firebase-ui-storage:3.2.2'\r\n//    implementation 'com.github.bumptech.glide:glide:4.6.1'\r\n//    annotationProcessor 'com.github.bumptech.glide:compiler:4.6.1'\r\n\r\n\r\n    implementation 'com.ismaeldivita.chipnavigation:chip-navigation-bar:1.3.4'\r\n    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.3.4'\r\n\r\n    //Gallery picasso\r\n    implementation 'com.squareup.picasso:picasso:2.3.3'\r\n}\r\nbuildscript {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n    }\r\n\r\n    dependencies {\r\n        classpath 'com.google.gms:google-services:4.3.8'\r\n    }\r\n}\r\n\r\napply plugin: 'com.android.application'\r\napply plugin: 'com.google.gms.google-services'\r\n\r\nandroid {\r\n    compileSdkVersion 30\r\n    buildToolsVersion \"30.0.2\"\r\n\r\n    buildFeatures{\r\n        viewBinding true\r\n    }\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.studyproject\"\r\n        minSdkVersion 26\r\n        targetSdkVersion 30\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n\r\n    }\r\n}\r\n\r\ndependencies {\r\n    //photoview\r\n    implementation 'com.github.chrisbanes:PhotoView:2.3.0'\r\n\r\n    implementation fileTree(dir: \"libs\", include: [\"*.jar\"])\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\r\n    implementation 'com.android.volley:volley:1.1.1'\r\n    implementation 'com.google.android.material:material:1.2.1'\r\n    //toolbar\r\n    implementation 'androidx.appcompat:appcompat:1.0.0'\r\n    //tablayout\r\n    implementation 'com.google.android.material:material:1.2.1'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    implementation 'com.google.firebase:firebase-storage:19.2.2'\r\n    implementation 'androidx.wear:wear:1.0.0'\r\n    implementation 'com.google.firebase:firebase-messaging:21.0.1'\r\n    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'\r\n    testImplementation 'junit:junit:4.12'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n\r\n    //cardview\r\n    implementation \"androidx.cardview:cardview:1.0.0\"\r\n    compileOnly 'com.google.android.wearable:wearable:2.6.0'\r\n\r\n    //room\r\n    def room_version = \"2.2.6\"\r\n    implementation \"androidx.room:room-runtime:$room_version\"\r\n    annotationProcessor \"androidx.room:room-compiler:$room_version\"\r\n    // optional - RxJava support for Room\r\n    implementation \"androidx.room:room-rxjava2:$room_version\"\r\n    // optional - Guava support for Room, including Optional and ListenableFuture\r\n    implementation \"androidx.room:room-guava:$room_version\"\r\n    // optional - Test helpers\r\n    testImplementation \"androidx.room:room-testing:$room_version\"\r\n\r\n    //firebase\r\n    implementation platform('com.google.firebase:firebase-bom:26.8.0')\r\n    implementation 'com.google.firebase:firebase-analytics'\r\n    implementation 'com.google.firebase:firebase-auth:16.0.5'\r\n    implementation 'com.google.android.gms:play-services-auth:17.0.0'\r\n    implementation 'com.google.firebase:firebase-database:17.0.0'\r\n    implementation 'com.google.firebase:firebase-database:19.7.0' //추가\r\n    implementation 'com.google.firebase:firebase-core:10.2.1'\r\n    implementation 'com.google.firebase:firebase-database:19.6.0'\r\n    implementation 'com.firebaseui:firebase-ui-database:7.1.1'\r\n\r\n    //firebase storage\r\n    implementation 'com.google.firebase:firebase-storage:19.2.2'\r\n\r\n    //firebase cloud messaging\r\n    implementation 'com.google.firebase:firebase-messaging:17.3.4'\r\n\r\n    // CircleImageView\r\n    implementation 'de.hdodenhof:circleimageview:3.1.0'\r\n\r\n    //TedPermission\r\n    implementation 'gun0912.ted:tedpermission:2.0.0'\r\n\r\n    //glide 이미지 로딩\r\n    implementation 'com.github.bumptech.glide:glide:4.9.0'\r\n    //+ 이미지로딩\r\n//    compile 'com.google.firebase:firebase-storage:12.0.0'\r\n//    compile 'com.firebaseui:firebase-ui-storage:3.2.2'\r\n//    implementation 'com.github.bumptech.glide:glide:4.6.1'\r\n//    annotationProcessor 'com.github.bumptech.glide:compiler:4.6.1'\r\n\r\n\r\n    implementation 'com.ismaeldivita.chipnavigation:chip-navigation-bar:1.3.4'\r\n    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.3.4'\r\n\r\n    //Gallery picasso\r\n    implementation 'com.squareup.picasso:picasso:2.3.3'\r\n}\r\nbuildscript {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n    }\r\n\r\n    dependencies {\r\n        classpath 'com.google.gms:google-services:4.3.8'\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision a2b654a7765631a7bd28666ecfc46a811fb7131a)
+++ app/build.gradle	(date 1622725724572)
@@ -217,14 +217,6 @@
     //TedPermission
     implementation 'gun0912.ted:tedpermission:2.0.0'
 
-    //glide 이미지 로딩
-    implementation 'com.github.bumptech.glide:glide:4.9.0'
-    //+ 이미지로딩
-//    compile 'com.google.firebase:firebase-storage:12.0.0'
-//    compile 'com.firebaseui:firebase-ui-storage:3.2.2'
-//    implementation 'com.github.bumptech.glide:glide:4.6.1'
-//    annotationProcessor 'com.github.bumptech.glide:compiler:4.6.1'
-
 
     implementation 'com.ismaeldivita.chipnavigation:chip-navigation-bar:1.3.4'
     implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.3.4'
